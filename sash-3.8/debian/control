Source: sash
Section: shells
Priority: optional
Maintainer: Tollef Fog Heen <tfheen@debian.org>
Standards-Version: 3.9.4
Build-Depends: zlib1g-dev (>= 1:1.2.2-7), debhelper (>= 9),
 e2fslibs-dev [!kfreebsd-amd64 !kfreebsd-i386],
 kfreebsd-kernel-headers [kfreebsd-amd64 kfreebsd-i386],
 dctrl-tools, po-debconf

Package: sash
Architecture: any
Section: shells
Priority: optional
Depends: ${shlibs:Depends}, ${misc:Depends}
Suggests: doc-debian
Built-Using: ${built-using}
Description: Stand-alone shell
 sash serves as an interactive substitute for /bin/sh, for use when
 /bin/sh is unusable.  It's statically linked, and includes many standard
 utilities as builtins (type "help" at the prompt for a reference list).
 If you've installed sash before rendering your system unbootable, and
 you have some knowledge of how your system is supposed to work, you might
 be able to repair your system using init=/bin/sash at the boot prompt.
 .
 Some people also prefer to have sash available as the shell for a
 root account (perhaps an under an alternate name such as sashroot)
 Configuration support is included for people who want this.  
 .
 Note: sash is not intended to serve as /bin/sh, and has few of the
 interactive features present in bash or ksh.  It's designed to be simple
 and robust, for people who need to do emergency repair work on a system.
 .
 Also note: sash doesn't include a built-in fsck -- fsck is too big
 and complicated.  If you need fsck, you'll have to get at least one
 partition or disk working well enough to run fsck.  More generally,
 sash is but one tool of many (backups, backup recovery tools, emergency
 boot disks or partitions, spare parts, testing of disaster plans,
 etc.) to help you recover a damaged system.
Homepage: http://members.tip.net.au/~dbell/
