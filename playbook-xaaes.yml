- name: Build a ST Mint distribution using Xaaes
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - import_tasks: basemint.yml

    - name: creates a backup of the xaaes config file
      command: mv build/mint/{{ version }}/xaaes/xaaes.cnf build/mint/{{ version }}/xaaes/xaaes.cnf.orig
      args:
        creates: build/mint/{{ version }}/xaaes/xaaes.cnf.orig

    - name: convert xaaes config file to utf-8 so we can edit it with ansible
      shell: "iconv -f 437 -t utf-8 build/mint/{{ version }}/xaaes/xaaes.cnf.orig  | sed -n '/^[^# ]/p' > build/mint/{{ version }}/xaaes/xaaes.cnf"
      args:
        creates: build/mint/{{ version }}/xaaes/xaaes.cnf

    - name: set xaaes resolution to ST High (640*400)
      lineinfile:
        path: build/mint/{{ version }}/xaaes/xaaes.cnf
        line: 'video = 4'

    - name: copy a background file for XAAES
      copy:
        src: resources/xaaes/640400.1/
        dest: build/mint/{{ version }}/xaaes/640400.1

    - name: copy a default INF file for teradesk
      copy:
        src: resources/XAAES.INF
        dest: build/mint/{{ version }}/xaaes/XAAES.INF

    - name: create defaults directory
      file:
        path: build/mint/{{ version }}/sys-root/root/defaults
        state: directory

    - name: copy a configuration file for tos2win with tw100 as the default terminal type
      copy:
        src: resources/TOSWIN2.CFG
        dest: build/mint/{{ version }}/sys-root/root/defaults/TOSWIN2.CFG

    - name: copy a default configuration file for teradesk
      copy:
        src: resources/TERADESK.INF
        dest: build/mint/{{ version }}/sys-root/opt/GEM/teradesk/TERADESK.INF

    - name: remove floppy drive B from Desktop
      replace:
        path: "build/mint/{{ version }}/mint.cnf"
        regexp : '^#FDC_HIDE_B=YES$'
        replace: 'FDC_HIDE_B=YES'

    - name: download command.tos minix disk image
      get_url:
        url: http://download.minix3.org/previous-versions/Atari/disk00
        dest: "{{ playbook_dir }}/resources/disk00"
        force: no

    - name: extract command.tos shell
      shell: MTOOLS_SKIP_CHECK=1 mcopy -i resources/disk00 ::command.tos resources/command.tos
      args:
        creates: resources/command.tos

    - name: copy command.tos to 'extra' folder
      copy:
        src: "{{ item }}"
        dest: build/extra/
      loop:
        - resources/command.tos

    - name: download 2048 game
      get_url:
        url: https://ptonthat.fr/files/2048/2048_13b_68k.zip
        dest: "{{ playbook_dir }}/resources/2048_13b_68k.zip"
        force: no

    - name: extract 2048
      unarchive:
        src: resources/2048_13b_68k.zip
        dest: "{{ playbook_dir }}/resources"
        creates: "{{ playbook_dir }}/resources/2048.68K/2048.APP"

    - name: test if extracted 2048 files are readable
      command: test -r {{ playbook_dir }}/resources/2048.68K/2048.APP
      register: app_is_readable
      changed_when: app_is_readable.rc != 0
      ignore_errors: true

      # ignore warning to use the ansible file module, as it does not support recursion
    - name: fix 2048 zip permissions
      command: chmod -R ug+rw resources/2048.68K/
      args:
        warn: false
      when: app_is_readable.rc != 0

    - name : copy 2048
      command: cp -r resources/2048.68K build/extra/
      args:
        creates: build/extra/2048.68K

